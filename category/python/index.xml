<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python | Hoang Nguyen</title>
    <link>https://LeoUtas.github.io/category/python/</link>
      <atom:link href="https://LeoUtas.github.io/category/python/index.xml" rel="self" type="application/rss+xml" />
    <description>python</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© Hoang Nguyen, 2020</copyright><lastBuildDate>Mon, 28 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://LeoUtas.github.io/media/social.png</url>
      <title>python</title>
      <link>https://LeoUtas.github.io/category/python/</link>
    </image>
    
    <item>
      <title>Bar charts in fisheries data visualization using python</title>
      <link>https://LeoUtas.github.io/blogs/blog2/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://LeoUtas.github.io/blogs/blog2/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
This example is a python version of a post titled &#34;bar charts in visualizing fisheries data with R&#34;. The purpose of doing this post is that it would be interesting to develop my skills in more than one language. Therefore, if you don&#39;t mind, please look at &lt;a href=&#34;\blogs\blog1\index.html&#34; target =&#34;blank&#34;&gt; this R version &lt;/a&gt; to get the conceptional idea of plotting before jumping into the python syntax. So far, I feel that what I can do with R can also do with python, but the python code requires some switching thinking process. &lt;/p&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
# importing useful libraries
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h3 id=&#34;data-exploration&#34;&gt;Data exploration&lt;/h3&gt;
&lt;br&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
# importing data
age_at_length = pd.read_csv(&#34;age_length_data.csv&#34;)
catch_at_length = pd.read_csv(&#34;catch_length.csv&#34;)
# data exploration
print(type(age_at_length))
print(age_at_length.shape)
print(age_at_length.dtypes)
&lt;p&gt;print(type(catch_at_length))
print(catch_at_length.shape)
print(catch_at_length.dtypes)
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
(65, 13)
length    int64
age.3     int64
age.4     int64
age.5     int64
age.6     int64
age.7     int64
age.8     int64
age.9     int64
age.10    int64
age.11    int64
age.12    int64
age.13    int64
age.14    int64
dtype: object
&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
(65, 2)
Length    int64
Count     int64
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h3 id=&#34;visualization-of-catch-at-length&#34;&gt;Visualization of catch at length&lt;/h3&gt;
&lt;br&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
plt.bar(catch_at_length.Length,catch_at_length.Count, color = &#34;lightblue&#34;)
plt.xlabel(&#34;length&#34;)
plt.ylabel(&#34;Number of fish&#34;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_6_0.svg&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt;
&lt;center&gt;Figure 1. Barplot of Catch at length&lt;/center&gt;
&lt;br&gt;
&lt;h3 id=&#34;visualization-of-catch-at-age&#34;&gt;Visualization of catch at age&lt;/h3&gt;
&lt;br&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
age_at_length_select = age_at_length.drop([&#34;length&#34;], axis=1)
age_at_length[&#34;total&#34;] = age_at_length_select.sum(axis=1)
age_at_length_proportion = age_at_length_select.div(age_at_length.total, axis = 0)
catch_at_age = age_at_length_proportion.mul(catch_at_length.Count, axis = 0)
catch_at_age_sum = catch_at_age.sum(axis = 0)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
plt.bar(pd.Series(np.arange(3,15,1)),catch_at_age_sum, color = &#34;lightblue&#34;)
plt.xlabel(&#34;Age&#34;)
plt.ylabel(&#34;Number of fish&#34;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_10_0.svg&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt;
&lt;center&gt; Figure 2. Bar plot of catch at age &lt;/center&gt;
&lt;br&gt;
&lt;h3 id=&#34;visualization-of-the-distribution-of-age-at-length&#34;&gt;Visualization of the distribution of age at length&lt;/h3&gt;
&lt;br&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
age_at_length_plot = age_at_length_proportion.plot(kind=&#34;bar&#34;, stacked = True, width = .8)
age_at_length_plot.set_xticklabels(np.arange(53,118,1), rotation = 0)
age_at_length_plot.xaxis.set_major_locator(plt.MaxNLocator(10))
plt.legend(bbox_to_anchor = (1.25,1), loc = &#34;upper right&#34;)
plt.xlabel(&#34;Length&#34;)
plt.ylabel(&#34;Frequency&#34;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_13_0.svg&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt;
&lt;center&gt; Figure 3. Bar plot of age at length distribution &lt;/center&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
catch_at_length_ts = pd.read_csv(&#34;catch.at.length.ts1.csv&#34;)
catch_at_length_ts_select = catch_at_length_ts.drop([&#34;length&#34;], axis = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
S1 = {}
S2 = {}
S3 = {}
S4 = {}

X = age_at_length_proportion
Y = catch_at_length_ts_select

for i in range(0, len(Y.columns)):
    S1[i] = Y[Y.columns[i]]
    S2[i] = X.mul(S1[i], axis = 0)
    S3[i] = S2[i].apply(np.sum, axis = 0)
    S4[i] = S3[i].div(S3[i].sum(axis = 0))

col_name2 = np.arange(1959,2017,1)
catch_at_age = pd.DataFrame(S4)
catch_at_age = catch_at_age.set_axis(col_name2, axis = 1, inplace = False)
catch_at_age_t = catch_at_age.T
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h3 id=&#34;visualization-of-the-distribution-of-catch-at-age-over-time&#34;&gt;Visualization of the distribution of catch at age over time&lt;/h3&gt;
&lt;br&gt;
&lt;pre class=&#34;language-python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;
catch_at_age_plot = catch_at_age_t.plot(kind = &#34;bar&#34;, stacked = True, width = .8)
catch_at_age_plot.set_xticklabels(np.arange(1959,2017,1), rotation = 0)
catch_at_age_plot.xaxis.set_major_locator(plt.MaxNLocator(12))
plt.legend(bbox_to_anchor = (1.25,1), loc = &#34;upper right&#34;)
plt.xlabel(&#34;Year&#34;)
plt.ylabel(&#34;Frequency&#34;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_18_0.svg&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt;
&lt;center&gt; Figure 4. Bar plot of catch at age over time &lt;/center&gt;
&lt;p&gt;Data for this post:&lt;/p&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href=&#34;age_length_data.csv&#34;&gt; age at length &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;catch_length.csv&#34;&gt; catch at length &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;catch.at.length.ts1.csv&#34;&gt; catch at length for multiple years &lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data visualization in fisheries science using R, python, and D3.js</title>
      <link>https://LeoUtas.github.io/projects/data-viz-in-fs/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://LeoUtas.github.io/projects/data-viz-in-fs/</guid>
      <description>&lt;p &gt;&lt;blockquote style=&#34;text-align: center;&#34; cite = &#34;https://en.wikipedia.org/wiki/A_picture_is_worth_a_thousand_words&#34;&gt; &#34;A picture is worth a thousand words&#34; &lt;/blockquote&gt;&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;This is a collection of fisheries visualization examples using R, python, D3.js, inspired by the work of &lt;a href = &#34;https://scholar.google.ca/citations?user=e_VIsbsAAAAJ&amp;hl=en&#34; target = &#34;blank&#34;&gt; Dr. Noel Cadigan &lt;/a&gt;, &lt;a href = &#34;https://scholar.google.ca/citations?user=u4D9FmgAAAAJ&amp;hl=en&#34; target = &#34;blank&#34;&gt; Dr. Jin Gao &lt;/a&gt;, and &lt;a href = &#34;https://www.researchgate.net/profile/Malcolm_Haddon&#34; target = &#34;blank&#34;&gt; Dr. Malcolm Haddon,&lt;/a&gt;  as well as python, R, and D3.js communities worldwide. &lt;/p&gt;
&lt;br&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;a href=&#34;\blogs\blog1\index.html&#34;&gt; Bar charts in fisheries data visualization using R &lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;br&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;a href=&#34;\blogs\blog2&#34;&gt; Bar charts in fisheries data visualization using python &lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;!-- Project information --&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;ul style=&#34;font-family: &#39;Courier New&#39;, Courier, monospace; font-size: .8rem;&#34;&gt;
    &lt;li&gt; Categories: personal project &lt;/li&gt;
    &lt;li&gt; Status: on-going &lt;/li&gt;
    &lt;li&gt; Timeline: Dec, 2020 to Feb, 2021 &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- back to top button  --&gt;
&lt;script src=&#34;https://unpkg.com/vanilla-back-to-top@7.2.1/dist/vanilla-back-to-top.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;addBackToTop({
  diameter: 80,
  backgroundColor: &#39;#5D7C96&#39;,
  textColor: &#39;#fff&#39;
})&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Modelling in fisheries science using R and python</title>
      <link>https://LeoUtas.github.io/projects/modelling-in-fs/</link>
      <pubDate>Thu, 17 Dec 2020 18:13:41 -0330</pubDate>
      <guid>https://LeoUtas.github.io/projects/modelling-in-fs/</guid>
      <description>

&lt;p style=&#34;text-align: justify;&#34;&gt;This is a collection of fisheries modelling examples using R and python, inspired by the work of &lt;a href = &#34;https://scholar.google.ca/citations?user=e_VIsbsAAAAJ&amp;hl=en&#34; target = &#34;blank&#34;&gt; Dr. Noel Cadigan &lt;/a&gt;, &lt;a href = &#34;https://scholar.google.ca/citations?user=u4D9FmgAAAAJ&amp;hl=en&#34; target = &#34;blank&#34;&gt; Dr. Jin Gao &lt;/a&gt;, and &lt;a href = &#34;https://www.researchgate.net/profile/Malcolm_Haddon&#34; target = &#34;blank&#34;&gt; Dr. Malcolm Haddon.&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;




&lt;!-- Project information --&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;ul style=&#34;font-family: &#39;Courier New&#39;, Courier, monospace; font-size: .8rem;&#34;&gt;
    &lt;li&gt; Categories: personal project &lt;/li&gt;
    &lt;li&gt; Status: on-going &lt;/li&gt;
    &lt;li&gt; Timeline: Dec, 2020 to Feb, 2021 &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- back to top button  --&gt;
&lt;script src=&#34;https://unpkg.com/vanilla-back-to-top@7.2.1/dist/vanilla-back-to-top.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;addBackToTop({
  diameter: 80,
  backgroundColor: &#39;#5D7C96&#39;,
  textColor: &#39;#fff&#39;
})&lt;/script&gt;
</description>
    </item>
    
  </channel>
</rss>
